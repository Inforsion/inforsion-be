openapi: 3.0.0
info:
  title: Inforsion API Docs
  description: 소상공인을 위한 카페 매출 관리 서비스 Inforsion의 API (사용자 인증 포함)
  version: 1.0.0

servers:
  - url: http://server.inforsion.kr
    description: 개발 서버

paths:
  /health:
    get:
      summary: 서버가 살아있는지 확인
      tags:
        - 기타
      responses:
        '200':
            description: 서버 정상 작동 중
        '404':
            description: 서버가 죽어있음
  /auth/signup:
    post:
      summary: 회원가입
      tags:
        - 인증
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: 사용자 이름
                email:
                  type: string
                  format: email
                  description: 사용자 이메일 주소
                password:
                  type: string
                  format: password
                  description: 사용자 비밀번호
      responses:
        '201':
          description: 사용자 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '회원가입 성공'
        '400':
          description: 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: 사용자 로그인
      tags:
        - 인증
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: 사용자 이메일 주소
                password:
                  type: string
                  format: password
                  description: 사용자 비밀번호
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '로그인 성공!'
                  accessToken:
                    type: string
                    description: JWT 액세스 토큰
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        '400':
          description: 로그인 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store/create:
    post:
      summary: 새로운 매장 생성
      description: 시스템에 새로운 매장을 생성합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreInput'
      responses:
        '201':
          description: 매장이 성공적으로 생성됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '스토어가 정상적으로 생성되었습니다.'
                  storeInfo:
                    $ref: '#/components/schemas/StoreInfo'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store/list:
    get:
      summary: 스토어 목록 조회
      description: 사용자의 모든 매장 목록을 조회합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 매장 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreInfo'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store/{storeId}:
    get:
      summary: 스토어 단일 조회
      description: 특정 매장의 상세 정보를 조회합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: storeId
          required: true
          schema:
            type: integer
          description: 조회할 매장의 ID
      responses:
        '200':
          description: 매장 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreInput'
        '404':
          description: 매장을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store:
    delete:
      summary: 스토어 삭제
      description: 특정 매장을 삭제합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - storeId
              properties:
                storeId:
                  type: integer
                  description: 삭제할 매장의 ID
      responses:
        '200':
          description: 매장 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '매장이 성공적으로 삭제되었습니다.'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 매장을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/create:
    post:
      summary: 새로운 상품 생성
      tags:
        - 상품
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: 상품 생성 성공
        '400':
          description: 잘못된 요청
        '403':
          description: 권한 없음

  /product/{id}:
    put:
      summary: 기존 상품 수정
      tags:
        - 상품
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: 상품 수정 성공
        '400':
          description: 잘못된 요청
        '403':
          description: 권한 없음
        '404':
          description: 상품을 찾을 수 없음

    delete:
      summary: 상품 삭제
      tags:
        - 상품
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 상품 삭제 성공
        '400':
          description: 잘못된 요청
        '403':
          description: 권한 없음
        '404':
          description: 상품을 찾을 수 없음

    get:
      summary: 단일 상품 조회
      tags:
        - 상품
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 상품 조회 성공
        '400':
          description: 잘못된 요청
        '403':
          description: 권한 없음
        '404':
          description: 상품을 찾을 수 없음

  /product/store/{storeId}:
    get:
      summary: 매장별 상품 목록 조회
      tags:
        - 상품
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: storeId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 상품 목록 조회 성공
        '400':
          description: 잘못된 요청
        '403':
          description: 권한 없음
  /ingredient:
    get:
      summary: 모든 재료 조회
      tags:
        - 재료
      responses:
        '200':
          description: 성공적으로 재료 목록을 반환
        '500':
          description: 서버 오류
  /ingredient/create:
    post:
      summary: 새 재료 추가
      tags:
        - 재료
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                amountPerProduct:
                  type: number
                unit:
                  type: string
                productId:
                  type: integer
      responses:
        '201':
          description: 재료가 성공적으로 생성됨
        '400':
          description: 잘못된 요청

  /ingredient/{id}:
    get:
      summary: 특정 재료 조회
      tags:
        - 재료
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공적으로 재료 정보를 반환
        '404':
          description: 재료를 찾을 수 없음
        '500':
          description: 서버 오류

    put:
      summary: 재료 정보 수정
      tags:
        - 재료
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                amount:
                  type: number
                unit:
                  type: string
                productId:
                  type: integer
      responses:
        '200':
          description: 재료 정보가 성공적으로 수정됨
        '400':
          description: 잘못된 요청
        '404':
          description: 재료를 찾을 수 없음

    delete:
      summary: 재료 삭제
      tags:
        - 재료
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 재료가 성공적으로 삭제됨
        '400':
          description: 잘못된 요청
        '404':
          description: 재료를 찾을 수 없음
  /inventory:
    get:
      summary: 전체 재고 조회
      description: 모든 재고 항목을 조회합니다.
      tags:
        - 재고
      responses:
        '200':
          description: 성공적으로 재고 목록을 조회함
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /inventory/{id}:
    get:
      summary: 특정 재고 조회
      description: ID를 기준으로 특정 재고 항목을 조회합니다.
      tags:
        - 재고
      parameters:
        - name: id
          in: path
          required: true
          description: 재고 항목 ID
          schema:
            type: integer
      responses:
        '200':
          description: 성공적으로 재고 항목을 조회함
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        '404':
          description: 재고 항목을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: 재고 수정
      description: 기존 재고 항목을 수정합니다.
      tags:
        - 재고
      parameters:
        - name: id
          in: path
          required: true
          description: 재고 항목 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                expiryDate:
                  type: string
                  format: date-time
      responses:
        '200':
          description: 재고 항목이 성공적으로 수정됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: 재고 삭제
      description: 재고 항목을 삭제합니다.
      tags:
        - 재고
      parameters:
        - name: id
          in: path
          required: true
          description: 재고 항목 ID
          schema:
            type: integer
      responses:
        '200':
          description: 재고 항목이 성공적으로 삭제됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /inventory/create:
    post:
      summary: 재고 추가
      description: 새로운 재고 항목을 추가합니다.
      tags:
        - 재고
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ingredientId
                - quantity
                - expiryDate
                - storeId
              properties:
                ingredientId:
                  type: integer
                quantity:
                  type: number
                expiryDate:
                  type: string
                  format: date-time
                storeId:
                  type: integer
      responses:
        '201':
          description: 재고 항목이 성공적으로 생성됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /inventory/expiring-soon:
    get:
      summary: 유통기한 임박 재고 조회
      description: 7일 이내에 유통기한이 만료되는 재고 항목을 조회합니다.
      tags:
        - 재고
      responses:
        '200':
          description: 유통기한 임박 재고 목록을 성공적으로 조회함
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /inventory/out-of-stock:
    get:
      summary: 재고 부족 항목 조회
      description: 수량이 0 이하인 재고 항목을 조회합니다.
      tags:
        - 재고
      responses:
        '200':
          description: 재고 부족 항목 목록을 성공적으로 조회함
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Inventory:
      type: object
      required:
        - ingredientId
        - quantity
        - expiryDate
        - storeId
      properties:
        id:
          type: integer
          format: int64
          description: 재고 항목의 고유 ID
        ingredientId:
          type: integer
          description: 재료의 고유 ID
        quantity:
          type: number
          description: 재고 수량
        expiryDate:
          type: string
          format: date-time
          description: 유통기한
        storeId:
          type: integer
          description: 가게 ID
        ingredient:
          $ref: '#/components/schemas/Ingredient'

    Ingredient:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        unit:
          type: string
    ProductInput:
      type: object
      required:
        - name
        - price
        - storeId
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        imageUrl:
          type: string
        isSignature:
          type: boolean
        inStock:
          type: boolean
        storeId:
          type: integer
    StoreInput:
      type: object
      required:
        - name
        - location
      properties:
        name:
          type: string
          description: 매장의 이름
        location:
          type: string
          description: 매장의 위치
        description:
          type: string
          description: 매장에 대한 설명
        phoneNumber:
          type: string
          description: 매장의 전화번호
        email:
          type: string
          format: email
          description: 매장의 이메일 주소
        openingHours:
          type: object
          description: 매장의 영업 시간
          properties:
            monday:
              type: string
              description: 월요일 영업 시간
            tuesday:
              type: string
              description: 화요일 영업 시간
            wednesday:
              type: string
              description: 수요일 영업 시간
            thursday:
              type: string
              description: 목요일 영업 시간
            friday:
              type: string
              description: 금요일 영업 시간
            saturday:
              type: string
              description: 토요일 영업 시간
            sunday:
              type: string
              description: 일요일 영업 시간

    StoreInfo:
      type: object
      properties:
        id:
          type: integer
          description: 매장의 고유 식별자
        name:
          type: string
          description: 매장의 이름

    Error:
      type: object
      properties:
        message:
          type: string
          description: 오류 메시지
        cause:
          type: string
          description: 오류의 원인

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer 토큰을 사용한 인증

security:
  - bearerAuth: []