openapi: 3.0.0
info:
  title: Inforsion API Docs
  description: 소상공인을 위한 카페 매출 관리 서비스 Inforsion의 API (사용자 인증 포함)
  version: 1.0.0

servers:
  - url: http://server.inforsion.kr
    description: 개발 서버

paths:
  /auth/signup:
    post:
      summary: 회원가입
      tags:
        - 인증
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: 사용자 이름
                email:
                  type: string
                  format: email
                  description: 사용자 이메일 주소
                password:
                  type: string
                  format: password
                  description: 사용자 비밀번호
      responses:
        '201':
          description: 사용자 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '회원가입 성공'
        '400':
          description: 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: 사용자 로그인
      tags:
        - 인증
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: 사용자 이메일 주소
                password:
                  type: string
                  format: password
                  description: 사용자 비밀번호
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '로그인 성공!'
                  accessToken:
                    type: string
                    description: JWT 액세스 토큰
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        '400':
          description: 로그인 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store/create:
    post:
      summary: 새로운 매장 생성
      description: 시스템에 새로운 매장을 생성합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreInput'
      responses:
        '201':
          description: 매장이 성공적으로 생성됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '스토어가 정상적으로 생성되었습니다.'
                  storeInfo:
                    $ref: '#/components/schemas/StoreInfo'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store/list:
    get:
      summary: 스토어 목록 조회
      description: 사용자의 모든 매장 목록을 조회합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 매장 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreInfo'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store/{storeId}:
    get:
      summary: 스토어 단일 조회
      description: 특정 매장의 상세 정보를 조회합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: storeId
          required: true
          schema:
            type: integer
          description: 조회할 매장의 ID
      responses:
        '200':
          description: 매장 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreInput'
        '404':
          description: 매장을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /store:
    delete:
      summary: 스토어 삭제
      description: 특정 매장을 삭제합니다
      tags:
        - 매장
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - storeId
              properties:
                storeId:
                  type: integer
                  description: 삭제할 매장의 ID
      responses:
        '200':
          description: 매장 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '매장이 성공적으로 삭제되었습니다.'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 매장을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    StoreInput:
      type: object
      required:
        - name
        - location
      properties:
        name:
          type: string
          description: 매장의 이름
        location:
          type: string
          description: 매장의 위치
        description:
          type: string
          description: 매장에 대한 설명
        phoneNumber:
          type: string
          description: 매장의 전화번호
        email:
          type: string
          format: email
          description: 매장의 이메일 주소
        openingHours:
          type: object
          description: 매장의 영업 시간
          properties:
            monday:
              type: string
              description: 월요일 영업 시간
            tuesday:
              type: string
              description: 화요일 영업 시간
            wednesday:
              type: string
              description: 수요일 영업 시간
            thursday:
              type: string
              description: 목요일 영업 시간
            friday:
              type: string
              description: 금요일 영업 시간
            saturday:
              type: string
              description: 토요일 영업 시간
            sunday:
              type: string
              description: 일요일 영업 시간

    StoreInfo:
      type: object
      properties:
        id:
          type: integer
          description: 매장의 고유 식별자
        name:
          type: string
          description: 매장의 이름

    Error:
      type: object
      properties:
        message:
          type: string
          description: 오류 메시지
        cause:
          type: string
          description: 오류의 원인

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer 토큰을 사용한 인증

security:
  - bearerAuth: []